
/*********************************************************************
*                                                                    *
* EyesGuard - программа для тех, кто хочет сохранить свое зрение,    *
*             работая на компьютере.                                 *
* Сайт программы www.eyesguard.org                                   *
*    © Воробьев Дмитрий (eyesguard@yandex.ru), 2007.                 *
*    Данная программа является свободным программным обеспечением.   *
* Вы вправе распространять ее и/или модифицировать в соответствии    *
* с условиями Генеральной Общественной Лицензии GNU в том виде,      *
* как она была опубликована Фондом Свободного ПО                     *
* (Free Software Foundation); либо версии                            *
* 2 Лицензии либо (по вашему желанию) любой более поздней версии.    *
*                                                                    *
* Программа распространяется в надежде, что она будет полезной,      *
* но БЕЗ КАКИХ БЫ ТО НИ БЫЛО ГАРАНТИЙНЫХ ОБЯЗАТЕЛЬСТВ; даже без      *
* косвенных гарантийных обязательств, связанных с ПОТРЕБИТЕЛЬСКИМИ   *
* СВОЙСТВАМИ и ПРИГОДНОСТЬЮ ДЛЯ ОПРЕДЕЛЕННЫХ ЦЕЛЕЙ. Для получения    *
* более подробной информации ознакомьтесь с Генеральной              *
* Общественной Лицензией GNU (http://www.gnu.org/licenses/gpl.html). *
*                                                                    *
*********************************************************************/

//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "BreakForm.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TBreakWnd *BreakWnd;

//---------------------------------------------------------------------------
__fastcall TBreakWnd::TBreakWnd(TComponent* Owner)
        : TForm(Owner)
{

}
//---------------------------------------------------------------------------

void __fastcall TBreakWnd::FormClose(TObject *Sender, TCloseAction &Action)
{
 MainWnd->IsBreakNow = true;
 MainWnd->IsWarningNow = true;
 MainWnd->TimerTimer(BreakWnd);
}
//---------------------------------------------------------------------------

void __fastcall TBreakWnd::FormMouseMove(TObject *Sender,
      TShiftState Shift, int X, int Y)
{
 if ((MainWnd->EnMonOff) && (MainWnd->IsBreakNow))
        SendMessage(Handle,WM_SYSCOMMAND,SC_MONITORPOWER,1);
}
//---------------------------------------------------------------------------

void __fastcall TBreakWnd::FormShow(TObject *Sender)
{
 SetFocus();        
}
//---------------------------------------------------------------------------


